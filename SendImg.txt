         summary
         Send File
         summary
         param name=fileNameparam
         param name=IpAddressStringparam
         param name=portNoparam
        public void SendFile(string fileName, string IpAddressString, int portNo)
        {
             try  
            {  
                 
                string fileNamee = fileName;  
 
                TcpClient tcpClient = new TcpClient(IpAddressString, portNo);  
                Console.WriteLine(Connected. Sending file.);  
 
                StreamWriter sWriter = new StreamWriter(client.GetStream());  
 
                byte[] bytes = File.ReadAllBytes(fileNamee);  
 
                sWriter.WriteLine(bytes.Length.ToString());  
                sWriter.Flush();  
 
                sWriter.WriteLine(fileNamee);  
                sWriter.Flush();  
 
                Console.WriteLine(Sending file);  
                client.Client.SendFile(fileNamee);  
 
            }  
            catch (Exception e)  
            {  
                Console.Write(e.Message);  
            }  
 
           
          

            try
            {
                IPAddress[] ipAddress = Dns.GetHostAddresses(localhost);
                IPEndPoint ipEnd = new IPEndPoint(ipAddress[0], 5656);
                Console.WriteLine();

                IPEndPoint ipEnd_client = new IPEndPoint(IPAddress.Parse(IpAddressString), portNo);
                Socket clientSock_client = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.IP);


                string filePath = ;

                fileName = fileName.Replace(, );
                while (fileName.IndexOf()  -1)
                {
                    filePath += fileName.Substring(0, fileName.IndexOf() + 1);
                    fileName = fileName.Substring(fileName.IndexOf() + 1);
                }


                byte[] fileNameByte = Encoding.UTF8.GetBytes(fileName);
                if (fileNameByte.Length  5000  1024)
                {
                    curMsg_client = File size is more than 5Mb, please try with smaller file.;
                    return;
                }

                curMsg_client = Buffering ...;
                string fullPath = filePath + fileName;

                byte[] fileData = File.ReadAllBytes(fullPath);
                byte[] clientData = new byte[4 + fileNameByte.Length + fileData.Length];
                byte[] fileNameLen = BitConverter.GetBytes(fileNameByte.Length);

                fileNameLen.CopyTo(clientData, 0);
                fileNameByte.CopyTo(clientData, 4);
                fileData.CopyTo(clientData, 4 + fileNameByte.Length);

                curMsg_client = Connection to server ...;
                clientSock_client.Connect(ipEnd_client);

                curMsg_client = File sending...;
                clientSock_client.Send(clientData, 0, clientData.Length, 0);

                curMsg_client = Disconnecting...;
                clientSock_client.Close();
                curMsg_client = File [ + fullPath + ] transferred.;
                MessageBox.Show(curMsg_client);

            }
            catch (Exception ex)
            {
                if (ex.Message == No connection could be made because the target machine actively refused it)
                    curMsg_client = File Sending fail. Because server not running.;
                else
                    curMsg_client = File Sending fail. + ex.Message;
            }

        }